(this.webpackJsonpsbk_portfolio=this.webpackJsonpsbk_portfolio||[]).push([[0],{27:function(e,t,i){},31:function(e,t,i){},34:function(e,t,i){},36:function(e,t,i){},37:function(e,t,i){},38:function(e,t,i){},39:function(e,t,i){},40:function(e,t,i){},41:function(e,t,i){},42:function(e,t,i){},43:function(e,t,i){},44:function(e,t,i){},46:function(e,t,i){"use strict";i.r(t);var s=i(8),n=i(1),a=i(0);const r=Object(n.createContext)(),c=e=>{let{children:t}=e;const[i,s]=Object(n.useState)("light");Object(n.useEffect)((()=>{const e=window.matchMedia("(prefers-color-scheme: dark)");s(e.matches?"dark":"light"),e.addEventListener("change",(e=>{s(e.matches?"dark":"light")}))}),[]);return Object(a.jsx)(r.Provider,{value:[{themeName:i,toggleTheme:()=>{const e="dark"===i?"light":"dark";localStorage.setItem("themeName",e),s(e)}}],children:t})};var l=i.p+"static/media/DisarmIt.2e187eb7.jpg",o=i.p+"static/media/DungeonMan.6e6faa7c.png",d=i.p+"static/media/FragEngine.00123f16.png",h=i.p+"static/media/FragEngineLighting.fa482ca7.png",m=i.p+"static/media/DIT_R1.40fea350.png",j=i.p+"static/media/DIT_R2.a722ac67.png",b=i.p+"static/media/DIT_R3.7fe7eddc.png",p=i.p+"static/media/FABRIK.2c0c699c.gif";const g={homepage:"",title:"SBK."},u={name:"S. Bharath Krishnan",role:"Game Developer & Graphics Programmer",description:Object(a.jsxs)(a.Fragment,{children:["I am a passionate Computer Science engineer with over 7 years of experience specializing in ",Object(a.jsx)("strong",{children:"game development"})," and ",Object(a.jsx)("strong",{children:"graphics programming"}),". Skilled in ",Object(a.jsx)("strong",{children:"Unity (C#)"}),", ",Object(a.jsx)("strong",{children:"shader programming"}),", ",Object(a.jsx)("strong",{children:"procedural generation"}),", and ",Object(a.jsx)("strong",{children:"2D/3D game engine development"}),", I have built and optimized interactive, visually compelling games and engine components. My expertise includes ",Object(a.jsx)("strong",{children:"real-time rendering"}),", ",Object(a.jsx)("strong",{children:"lighting models"}),", ",Object(a.jsx)("strong",{children:"particle systems"}),", and ",Object(a.jsx)("strong",{children:"performance optimization"})," using both high-level scripting and low-level graphics techniques in ",Object(a.jsx)("strong",{children:"GLSL"})," and ",Object(a.jsx)("strong",{children:"modern C++"}),". I have led game development communities, organized ",Object(a.jsx)("strong",{children:"game jams"}),", and mentored peers, continuously pushing creative and technical boundaries to deliver polished, scalable, and immersive gaming experiences."]}),resume:"https://www.overleaf.com/read/tsrmmbmpgmsf#f058a6",social:{linkedin:"https://www.linkedin.com/in/bharath-krishnan-119915211/",github:"https://github.com/Bharath33-Krishnan",itch:"https://bharathk33.itch.io/"}},x=[{name:"Disarm-It Remake (2025) : Work In Progress",CarouselContent:[{type:"iframe",src:"https://drive.google.com/file/d/1NBcqLHaqGZcqp3AASW-_1debc3bR5Ukw/preview",title:"Vine Shader"},{type:"image",src:m,title:"Screenshot 1"},{type:"image",src:j,title:"Screenshot 2"},{type:"image",src:b,title:"Screenshot 3"}],description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Disarm It \u2014 Remake (2025)"})," is a modern reimagining of my 2020 GMTK Game Jam entry ",Object(a.jsx)("em",{children:"Disarm It"}),", a high-pressure driving game built around dynamically changing rules. While the core premise remains the same\u2014obey procedural rules to prevent an onboard bomb from detonating\u2014this remake serves as a showcase of how I\u2019ve evolved as a gameplay programmer over the last five years."]}),Object(a.jsxs)("p",{children:["The remake replaces the original obstacles with reactive"," ",Object(a.jsx)("strong",{children:"laser hazards"})," that dynamically spawn and animate around the player. The car now features a"," ",Object(a.jsx)("strong",{children:"three-heart health system"}),", adding layers of survivability and tension. Every system\u2014from procedural terrain to real-time rule evaluation\u2014has been rebuilt with professional-grade architecture and optimization in mind."]}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Procedural Terrain Generation:"})," Implemented a custom chunk-based generation system inspired by the Wave Function Collapse algorithm. Perlin noise defines step-like floor heights, while automatic ramp creation ensures continuous traversal."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Dynamic Chunk Loading:"})," Loaded only visible chunks within a distance cube around the player to reduce render and compute overhead."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Laser Hazard System:"})," Lasers spawn around the player using Poisson disk sampling, with spawn radius tightening over time. Each laser features custom VFX and animated sinusoidal/circular movement."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Hexagonal Arena Shader:"})," Designed a pulsating sci-fi arena enclosure with inward-facing hex patterns and emissive electrical effects."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Robust Gameplay Architecture:"})," Built a modular state-based system managing play, pause, and game-over states through interfaces and delegates. ScriptableObjects define gameplay data for cars, lasers, and rules."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Rule Engine 2.0:"})," Refactored rule logic using interfaces, reflection, and templates\u2014allowing rules to be generated, evaluated, and applied seamlessly during runtime."]})]}),Object(a.jsx)("p",{children:"The alpha build focuses on core systems and gameplay. Upcoming updates will expand UI/UX polish, introduce leaderboards, car and arena customization, and enhance overall game feel."})]})}),stack:["Unity","C#"],livePreview:"https://drive.google.com/drive/folders/1an47AKY5LKtGUd7W_cySWFQ1HeeIy-rT?usp=drive_link"},{name:"Dungeon Man (2024)",content:Object(a.jsx)("div",{className:"iframe-container",children:Object(a.jsx)("img",{alt:"Dungeon Man","max-height":"1200px",height:"100%",src:o,title:"Disarm It Img",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}),description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Dungeon Man"})," is a survival horror reinterpretation of the classic arcade game ",Object(a.jsx)("em",{children:"Pac-Man"}),", developed for the IGDC x WTF Game Jam 2024. Built by a team of four, the game follows Jack, a curious boy exploring the haunted Blackwood Manor. The twist: Jack\u2019s torch offers only limited\u2014and shrinking\u2014visibility, while spectral entities patrol the manor. One type of ghost actively hunts Jack, while the other guards electric cells used to recharge the dying torch. Players rely on reflexes, resource management, and a directional radar system to survive each increasingly dark level."]}),Object(a.jsx)("p",{children:"I took on both technical and leadership responsibilities in this project. From designing enemy behavior to integrating visual/audio elements, I ensured all systems worked harmoniously. My key contributions included:"}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Ghost AI System:"})," Developed a vector-based probabilistic movement model for ghosts targeting Jack and energy cells."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Player Controller & Lighting:"})," Engineered Jack\u2019s movement system and dynamic flashlight logic with gradually shrinking visibility."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Team Integration:"})," As the most experienced Unity developer, I led system coordination and ensured smooth collaboration across art, level design, and gameplay layers."]})]})]})}),stack:["Unity","C#"],livePreview:"https://bharathk33.itch.io/dungeon-man"},{name:"Funky Blueprints (2024)",content:Object(a.jsx)("div",{className:"iframe-container",children:Object(a.jsx)("iframe",{"max-height":"1200px",height:"100%",src:"https://www.youtube.com/embed/QuP8OgCKnaM?si=ygK62cTdX9dZ3N9F",title:"Funky Blueprints YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}),description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Funky Blueprints"})," is a physics-based puzzle game developed in one week during a game jam hosted by"," ",Object(a.jsx)("strong",{children:"IIT Palakkad"}),", where it won"," ",Object(a.jsx)("strong",{children:"2nd place"}),". Based on the theme"," ",Object(a.jsx)("strong",{children:'"Metamorphosis"'}),", the game challenges players to draw structures with distinct physical behaviors\u2014static, rotating (at various speeds), and joint-connected\u2014to guide a heart to its destination through creative contraptions. Despite being my first time using the ",Object(a.jsx)("strong",{children:"Godot Engine"}),", my prior experience with Unity allowed me to quickly adapt and contribute effectively within a four-person team."]}),Object(a.jsx)("p",{children:Object(a.jsx)("strong",{children:"Key Contributions:"})}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Stroke Collision System"}),": Implemented an algorithm to analyze drawn strokes (represented as vectors of points) and generate capsule colliders based on curvature\u2014using a single collider for smooth segments and multiple for sharper bends."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Joint Management System"}),": Designed and implemented data structures to dynamically create and safely delete joints between drawn structures without compromising game stability."]})]})]})}),stack:["Godot","GDScript"],livePreview:"https://bharathk33.itch.io/funkyblueprints"},{name:"Disarm It (2020)",content:Object(a.jsx)("div",{className:"iframe-container",children:Object(a.jsx)("img",{alt:"Disarm It","max-height":"1200px",height:"100%",src:l,title:"Disarm It Img",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}),description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Disarm It"})," is a high-pressure time-attack game created for the GMTK Game Jam 2020. Developed in"," ",Object(a.jsx)("strong",{children:"Unity"}),', it marked my first foray into game jams and procedural generation. The core gameplay revolves around driving a car that must obey dynamically generated rules\u2014such as "always drive backward&quot\u2014to prevent an onboard bomb from detonating. Obstacles are generated randomly and increase in frequency as the timer ticks down, adding to the chaotic tension.']}),Object(a.jsxs)("p",{children:["As a solo project, ",Object(a.jsx)("em",{children:"Disarm It"})," helped me explore fundamental procedural generation, car physics, and rule systems. The game featured hand-drawn UI elements made in MS Paint, quirky physics-based controls, and a randomized rule engine that enforced unique driving constraints per run. It ranked"," ",Object(a.jsx)("strong",{children:"1563 / 5267"})," entries in the jam and stands as an unforgettable milestone in my game development journey."]})]})}),stack:["Unity","C#"],livePreview:"https://bharathk33.itch.io/disarm-it"},{name:"Duel (2022)",content:Object(a.jsx)("div",{className:"iframe-container",children:Object(a.jsx)("iframe",{"max-height":"1200px",height:"100%",src:"https://www.youtube.com/embed/j0TNKrEShGs?si=6SBqW36uhfpPeb_Y",title:"Duel YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}),description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Duel"})," is a 2D strategy defense game made in Unity. Originally started for a game jam, it evolved into a month-long solo project exploring themes of loneliness and self-control. You play as Job, a villager cursed to become a vampire. During the day, you strategically place limited defenses across homes. At night, the vampire emerges and attacks, forcing you to face the consequences of your own defense placements. Each villager death raises suspicion, and if the meter fills, your secret is exposed and the game ends."]}),Object(a.jsxs)("p",{children:["The game was my first proper implementation of"," ",Object(a.jsx)("strong",{children:"object-oriented programming"})," in game development. I designed a modular defense system with polymorphic behaviors for each weapon type. Alongside code, I created all 2D art using"," ",Object(a.jsx)("strong",{children:"GraphicsGale"})," and co-wrote the story. Key mechanics include:"]}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Defense Management System"})," \u2013 place and remove defenses with limited inventory tracking"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Day-Night Cycle System"})," \u2013 animated transitions, custom sound design, and transformation effects"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Enemy AI"})," \u2013 lane-based attack logic targeting the weakest houses first"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Suspicion Mechanic"})," \u2013 increasing difficulty based on strategic failure"]})]})]})}),stack:["Unity","C#","GraphicsGale"],livePreview:"https://bharathk33.itch.io/duel"}],y=[{name:"IK Solver Library(2024)",content:Object(a.jsx)("div",{className:"iframe-container",children:Object(a.jsx)("iframe",{"max-height":"1200px",height:"100%",src:p,title:"IK Solver Gif",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}),description:Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:[Object(a.jsx)("strong",{children:"Inverse Kinematics Solver Library"})," is a flexible and extensible C++ library for solving inverse kinematics problems in both 2D and 3D spaces. Built with future scalability in mind, the library was designed to support multiple algorithms with the ability to easily swap between them. The initial implementation uses the"," ",Object(a.jsx)("strong",{children:"FABRIK algorithm"}),", providing fast and accurate solutions for kinematic chains."]}),Object(a.jsxs)("p",{children:["I focused on designing a"," ",Object(a.jsx)("strong",{children:"fully object-oriented architecture"})," with extensive use of ",Object(a.jsx)("strong",{children:"templates"})," to support different segment types, including ",Object(a.jsx)("strong",{children:"glm::vec2"}),","," ",Object(a.jsx)("strong",{children:"glm::vec3"}),", ",Object(a.jsx)("strong",{children:"glm::ivec2"}),", and"," ",Object(a.jsx)("strong",{children:"glm::ivec3"}),". The result is a clean, reusable, and type-agnostic system that's both easy to integrate and efficient in computation."]}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Algorithm-Swappable Architecture"})," \u2013 abstract base interfaces and modular design allow new IK algorithms to be integrated with minimal changes"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"FABRIK Solver"})," \u2013 robust implementation of Forward And Backward Reaching Inverse Kinematics for fast convergence and chain stability"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"GLM Compatibility"})," \u2013 supports multiple glm types via advanced C++ template programming, enabling seamless use in OpenGL and game projects"]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"OOP Design"})," \u2013 clean object-oriented structure ensures maintainability and future extensibility"]})]})]})}),stack:["C++","glm","raylib"],sourceCode:"https://github.com/Bharath33-Krishnan/InverseKinematics"},{name:"2D Game Engine Wrapper Arround Raylib (2024)",CarouselContent:[{type:"image",src:d,title:"Raylib Engine"},{type:"image",src:h,title:"Raylib Engine"}],description:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:["As part of a collaborative project, I co-developed a lightweight 2D game engine wrapper around ",Object(a.jsx)("strong",{children:"Raylib"}),", aimed at enhancing Raylib\u2019s capabilities with modular features and better support for third-party integrations. While the engine is 2D-focused, it was initially envisioned as a 3D engine\u2014resulting in a more advanced lighting system alongside traditional 2D systems."]}),Object(a.jsxs)("p",{children:["My primary contributions centered around the"," ",Object(a.jsx)("strong",{children:"lighting system, collision engine"}),", and"," ",Object(a.jsx)("strong",{children:"particle system"}),", all designed from scratch for flexibility and real-time performance."]}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Lighting System"})," \u2013 Developed a full"," ",Object(a.jsx)("em",{children:"3D Phong Lighting Model"})," with"," ",Object(a.jsx)("strong",{children:"normal mapping"})," support. This was a carryover from our initial 3D vision and brought enhanced visual depth to the 2D pipeline."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Collision Detection & Resolution"})," \u2013 Created a robust 2D collision system that handles both dynamic and static interactions, with support for layer-based rendering."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Particle System"})," \u2013 Engineered a simple particle system"]})]}),Object(a.jsxs)("p",{children:["The engine follows an ",Object(a.jsx)("strong",{children:"OOP-driven"}),","," ",Object(a.jsx)("strong",{children:"pure C++"})," architecture, providing a code-first workflow with minimal GUI. It includes sprite animation support, layered rendering, and cross-platform build scripts for Windows and Linux."]})]}),stack:["C++","Raylib","Cmake"],sourceCode:"https://github.com/Fragments-GDU-IIITK/Frag-Engine/"},{name:"Procedural Shaders",CarouselContent:[{type:"iframe",src:"https://www.youtube.com/embed/DRBvbl4j-4E?si=F-tTYO5K_NpsxHfK&amp;start=10",title:"Vine Shader"},{type:"iframe",src:"https://www.shadertoy.com/embed/lXK3D3?gui=true&t=10&paused=true&muted=false",title:"Scales Of Randomness"},{type:"iframe",src:"https://www.shadertoy.com/embed/t32SDW?gui=true&t=10&paused=true&muted=false",title:"Shooting Stars"}],description:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:["As a natural extension of my passion for game development, I\u2019ve developed a deep love for ",Object(a.jsx)("strong",{children:"shader art"})," and"," ",Object(a.jsx)("strong",{children:"procedural visuals"}),". Whether experimenting with"," ",Object(a.jsx)("strong",{children:"UV distortion, fract functions"})," in Shadertoy, or building visual pipelines in ",Object(a.jsx)("strong",{children:"Unity\u2019s Shader Graph"}),", each creation has offered new insights into the beauty of real-time rendering."]}),Object(a.jsx)("p",{children:"From algorithmically generated vines to accidental artifacts of randomness, every shader has been both a learning experience and a creative outlet. Here's a glimpse into some of my favorite works:"}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Procedural Vine Shader"})," \u2013 Built in Unity Shader Graph, simulates growth behavior along arbitrary paths."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Scales of Randomness"})," \u2013 A surprising pattern that emerged from UV manipulations and fract logic, posted on Shadertoy."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Shooting Stars"})," \u2013 A mesmerizing particle flow representing stars in a perpetual fall, one of my most polished Shadertoy pieces."]})]})]}),stack:["ShaderGraph","GLSL","Shadertoy","Unity"]},{name:"Procedural Music Visualization",CarouselContent:[{type:"iframe",src:"https://www.youtube.com/embed/DWNN5HCaRFQ?si=b7Wgazi2fGsYc1sv",title:"Planet Music Visualizer"},{type:"iframe",src:"https://www.shadertoy.com/embed/clGBWR?gui=true&paused=true&muted=false",title:"Scales Of Randomness"}],description:Object(a.jsxs)("div",{className:"portfolio-entry",style:{textAlign:"left"},children:[Object(a.jsxs)("p",{children:["Combining my love for audio and real-time rendering, I\u2019ve explored"," ",Object(a.jsx)("strong",{children:"music visualization"})," through both"," ",Object(a.jsx)("strong",{children:"Unity"})," and ",Object(a.jsx)("strong",{children:"Shadertoy"}),". These projects allowed me to blend rhythm, motion, and graphics into expressive, reactive visuals."]}),Object(a.jsx)("p",{children:"From audio-reactive planets to frequency-driven distortions, each project was a deep dive into how sound can shape visuals. Here\u2019s a glimpse into two of my favorite experiments:"}),Object(a.jsxs)("ul",{className:"portfolio-list",children:[Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"Unity Music Visualizer"})," \u2013 Inspired by Sebastien Lague\u2019s procedural terrain generation. This project uses mesh deformation techniques driven by live audio spectra to animate an otherworldly terrain reacting in real-time."]}),Object(a.jsxs)("li",{children:[Object(a.jsx)("strong",{children:"(Shadertoy) Music Visualizer"})," \u2013 A minimal shader experiment where polar UV transformations create a pulsing pattern synchronized with beats."]})]})]}),stack:["ShaderGraph","GLSL","Shadertoy","Unity"]}],O=["Unity Engine","C#","Playmaker","C/C++","Raylib","OpenGL","GLSL","HTML","CSS","JavaScript","React","Next JS","Express JS","Flask","Material UI","Git","CI/CD"],f="bharathkrishnan33@gmail.com";var v=i(13),w=i.n(v),k=i(11),N=i.n(k),S=i(15),C=i.n(S),I=i(14),_=i.n(I);i(27);var D=()=>{const[{themeName:e,toggleTheme:t}]=Object(n.useContext)(r),[i,s]=Object(n.useState)(!1),c=()=>s(!i);return Object(a.jsxs)("nav",{className:"center nav",children:[Object(a.jsxs)("ul",{style:{display:i?"flex":null},className:"nav__list ".concat(i?"nav__list--active":""),children:[x.length?Object(a.jsx)("li",{className:"nav__list-item",children:Object(a.jsx)("a",{href:"#games",onClick:c,className:"link link--nav",children:"games"})}):null,y.length?Object(a.jsx)("li",{className:"nav__list-item",children:Object(a.jsx)("a",{href:"#projects",onClick:c,className:"link link--nav",children:"Projects"})}):null,O.length?Object(a.jsx)("li",{className:"nav__list-item",children:Object(a.jsx)("a",{href:"#skills",onClick:c,className:"link link--nav",children:"Skills"})}):null,f?Object(a.jsx)("li",{className:"nav__list-item",children:Object(a.jsx)("a",{href:"#contact",onClick:c,className:"link link--nav",children:"Contact"})}):null]}),Object(a.jsx)("button",{type:"button",onClick:t,className:"btn btn--icon nav__theme","aria-label":"toggle theme",children:"dark"===e?Object(a.jsx)(N.a,{}):Object(a.jsx)(w.a,{})}),Object(a.jsx)("button",{type:"button",onClick:c,className:"btn btn--icon nav__hamburger","aria-label":"toggle navigation",children:i?Object(a.jsx)(_.a,{}):Object(a.jsx)(C.a,{})})]})};i(31);var G=()=>{const{homepage:e,title:t}=g;return Object(a.jsxs)("header",{className:"header center",children:[Object(a.jsx)("h3",{children:e?Object(a.jsx)("a",{href:e,className:"link",children:t}):t}),Object(a.jsx)(D,{})]})},F=i(9),A=i.n(F),T=i(16),P=i.n(T),B=i(20),L=i(17);i(34);var R=()=>{const{name:e,role:t,description:i,resume:s,social:n}=u;return Object(a.jsxs)("div",{className:"about center",children:[e&&Object(a.jsxs)("h1",{children:["Hi, I am ",Object(a.jsxs)("span",{className:"about__name",children:[e,"."]})]}),t&&Object(a.jsxs)("h2",{className:"about__role",children:["A ",t,"."]}),Object(a.jsx)("p",{className:"about__desc",children:i&&i}),Object(a.jsxs)("div",{className:"about__contact center",children:[s&&Object(a.jsx)("a",{href:s,children:Object(a.jsx)("span",{type:"button",className:"btn btn--outline",children:"Resume"})}),n&&Object(a.jsxs)(a.Fragment,{children:[n.github&&Object(a.jsx)("a",{href:n.github,"aria-label":"github",className:"link link--icon",children:Object(a.jsx)(A.a,{})}),n.linkedin&&Object(a.jsx)("a",{href:n.linkedin,"aria-label":"linkedin",className:"link link--icon",children:Object(a.jsx)(P.a,{})}),n.itch&&Object(a.jsx)("a",{href:n.itch,"aria-label":"linkedin",className:"link link--icon",children:Object(a.jsx)(B.a,{icon:L.a,size:"1x",style:{fontSize:"1.5em",paddingBottom:"0.2em"}})})]})]})]})},K=i(4),U=i.n(K),M=i(18),E=i.n(M);i(36),i(37);var z=e=>{let{media:t}=e;const[i,s]=Object(n.useState)(0),r=t.length;return Object(a.jsxs)("div",{className:"project-carousel",children:[Object(a.jsx)("div",{className:"carousel-media-wrapper",style:{transform:"translateX(-".concat(100*i,"%)")},children:t.map(((e,t)=>Object(a.jsxs)("div",{className:"carousel-media-item",children:["image"===e.type&&Object(a.jsx)("img",{src:e.src,alt:"Slide ".concat(t+1)}),"iframe"===e.type&&Object(a.jsx)("iframe",{width:"100%",height:"100%",src:e.src,title:"Iframe ".concat(t+1),allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})]},U()())))}),Object(a.jsxs)("div",{className:"carousel-buttons",children:[Object(a.jsx)("button",{type:"button",onClick:()=>s((e=>(e-1+r)%r)),className:"carousel-button",children:"\u2039"}),Object(a.jsx)("button",{type:"button",onClick:()=>s((e=>(e+1)%r)),className:"carousel-button",children:"\u203a"})]}),Object(a.jsx)("div",{className:"carousel-dots",children:t.map(((e,t)=>Object(a.jsx)("button",{type:"button",className:"carousel-dot ".concat(t===i?"active":""),onClick:()=>s(t),"aria-label":"Go to slide ".concat(t+1),tabIndex:0},U()())))})]})};var W=e=>{let{project:t}=e;return Object(a.jsxs)("div",{className:"project",children:[Object(a.jsx)("h3",{children:t.name}),t.CarouselContent&&Object(a.jsx)(z,{media:t.CarouselContent}),!t.CarouselContent&&t.content&&Object(a.jsx)("div",{className:"project__description",children:t.content}),Object(a.jsx)("p",{className:"project__description",children:t.description}),t.stack&&Object(a.jsx)("ul",{className:"project__stack",children:t.stack.map((e=>Object(a.jsx)("li",{className:"project__stack-item",children:e},U()())))}),t.sourceCode&&Object(a.jsx)("a",{href:t.sourceCode,"aria-label":"source code",className:"link link--icon",children:Object(a.jsx)(A.a,{})}),t.livePreview&&Object(a.jsx)("a",{href:t.livePreview,"aria-label":"live preview",className:"link link--icon",children:Object(a.jsx)(E.a,{})})]})};i(38);var J=e=>{let{id:t,projects:i,name:s}=e;return i.length?Object(a.jsxs)("section",{id:t,className:"section projects",children:[Object(a.jsx)("h2",{className:"section__title",children:s}),Object(a.jsx)("div",{className:"projects__grid",children:i.map((e=>Object(a.jsx)(W,{project:e},U()())))})]}):null};i(39);var q=()=>O.length?Object(a.jsxs)("section",{className:"section skills",id:"skills",children:[Object(a.jsx)("h2",{className:"section__title",children:"Skills"}),Object(a.jsx)("ul",{className:"skills__list",children:O.map((e=>Object(a.jsx)("li",{className:"skills__list-item btn btn--plain",children:e},U()())))})]}):null,V=i(19),H=i.n(V);i(40);var Y=()=>{const[e,t]=Object(n.useState)(!1);return Object(n.useEffect)((()=>{const e=()=>window.pageYOffset>500?t(!0):t(!1);return window.addEventListener("scroll",e),()=>window.removeEventListener("scroll",e)}),[]),e?Object(a.jsx)("div",{className:"scroll-top",children:Object(a.jsx)("a",{href:"#top","aria-label":"top",children:Object(a.jsx)(H.a,{fontSize:"large"})})}):null};i(41);var X=()=>f?Object(a.jsxs)("section",{className:"section contact center",id:"contact",children:[Object(a.jsx)("h2",{className:"section__title",children:"Contact"}),Object(a.jsx)("a",{href:"mailto:".concat(f),children:Object(a.jsx)("span",{type:"button",className:"btn btn--outline",children:"Email me"})})]}):null;i(42);var Q=()=>Object(a.jsx)("footer",{className:"footer",children:Object(a.jsx)("a",{href:"https://github.com/Bharath33-Krishnan/sbk_portfolio",className:"link footer__link",children:Object(a.jsxs)("p",{className:"footer-copy",children:["\xa9 2025 ",Object(a.jsx)("span",{className:"footer-author",children:"S. Bharath Krishnan"}),". All rights reserved."]})})});i(43);var Z=()=>{const[{themeName:e}]=Object(n.useContext)(r);return Object(a.jsxs)("div",{id:"top",className:"".concat(e," app"),children:[Object(a.jsx)(G,{}),Object(a.jsxs)("main",{children:[Object(a.jsx)(R,{}),Object(a.jsx)(J,{id:"games",projects:x,name:"Video Games"}),Object(a.jsx)(J,{id:"projects",projects:y,name:"Projects"}),Object(a.jsx)(q,{}),Object(a.jsx)(X,{})]}),Object(a.jsx)(Y,{}),Object(a.jsx)(Q,{})]})};i(44);Object(s.render)(Object(a.jsx)(c,{children:Object(a.jsx)(Z,{})}),document.getElementById("root"))}},[[46,1,2]]]);
//# sourceMappingURL=main.faf7e12c.chunk.js.map